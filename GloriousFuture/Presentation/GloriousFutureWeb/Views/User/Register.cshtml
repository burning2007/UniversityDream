@model GloriousFutureWeb.Models.RegisterModel
@{
    ViewBag.Title = "注册用户";
}
@Styles.Render("~/Content/themes/base/css")
@Styles.Render("~/Content/UniversitySelector.css")
@Scripts.Render("~/bundles/external")
<h2>
    注册用户</h2>
<div id="tabs">
    <ul>
        <li><a href="#tabs-1">个人用户</a></li>
        <li><a href="#tabs-2">企业用户</a></li>
    </ul>
    <div id="tabs-1">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.UserName)
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Password)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ConfirmedPassword)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ConfirmedPassword)
                    @Html.ValidationMessageFor(model => model.ConfirmedPassword)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Email)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.QQ)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.QQ)
                    @Html.ValidationMessageFor(model => model.QQ)
                    @Html.Raw("<input type='hidden' name='UniversityId' value='" + Guid.Empty + "' />")
                    <input type="hidden" name="UniversityName" value="默认大学" />
                </div>
                <p>
                    <input type="submit" value="注册" />
                </p>
            </fieldset>
        }
    </div>
    <div id="tabs-2">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.UserName)
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Password)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ConfirmedPassword)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ConfirmedPassword)
                    @Html.ValidationMessageFor(model => model.ConfirmedPassword)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Email)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.QQ)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.QQ)
                    @Html.ValidationMessageFor(model => model.QQ)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.UniversityName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.UniversityName)
                    @Html.ValidationMessageFor(model => model.UniversityName)
                    <input type="hidden" id="UniversityId" name="UniversityId" />
                </div>
                <p>
                    <input type="submit" value="注册" />
                </p>
            </fieldset>
        }
    </div>
</div>
<div id="divMask" style="width: 100%; height: 100%; overflow: auto; background-color: gray;
 display: none; position: absolute; left: 0; top: 0;">
</div>
<div id="choose-box-wrapper">
    <div id="choose-box">
        <div id="choose-box-title">
            <span>选择学校</span>
        </div>
        <div id="choose-a-province">
            @foreach (GF.Domain.Context.Region province in ViewBag.Provinces)
            {
                @Ajax.ActionLink(province.Name, "SearchUniversity", "User", new { provinceId = province.Id }, new AjaxOptions { HttpMethod = "GET", InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace, UpdateTargetId = "choose-a-school" }, new { onclick = "addSelectorClass(this)" });
            }
        </div>
        <div id="choose-a-school">
            @foreach (GF.Domain.Context.University university in ViewBag.Universities)
            {
                string universityName = university.Name;
                int nameLength = universityName.Length;
                universityName = nameLength >= 12 ? universityName.Substring(0, 8) + "......" : universityName;
                @Html.Raw("<a href='javascript:void(0);' onclick=getSelectedUniversity('" + university.Name + "','" + university.Id.ToString() + "') >" + universityName + "</a>");
            }
        </div>
        <div id="choose-box-bottom">
            <input type="botton" onclick="hide()" value="关闭" />
        </div>
    </div>
</div>
<script type="text/javascript">
//    $.fx.speeds._default = 100;
    $(function () {
        $("#tabs").tabs();
        $("#UniversityName").click(function () {
            $('#divMask').css("display", "block");
            $('#divMask').css({ 'opacity': '0.8' });
            $('#divMask').css("height", $(document).height());
            $('#choose-box-wrapper').css("z-index", 10);
            $("#choose-a-province a").removeClass('choosen');
            $("#choose-a-province a:first-child").addClass("choosen");
            $("#choose-a-province a:first-child").click();
            makeCenter();
            return false;
        });
    });
    function getSelectedUniversity(universityName, universityId) {
        $("#UniversityName").val(universityName);
        $("#UniversityId").val(universityId);
        hide();
    }

    function makeCenter() {
        $('#choose-box-wrapper').css("display", "block");
        $('#choose-box-wrapper').css("position", "absolute");
        $('#choose-box-wrapper').css("top", (($(window).height() - $('#choose-box-wrapper').height() * 1.5) / 2) + $(window).scrollTop() + "px");
        $('#choose-box-wrapper').css("left", (($(window).width() - $('#choose-box-wrapper').width()) / 2) + $(window).scrollLeft() + "px");
    }

    function hide() {
        $('#choose-box-wrapper').css("display", "none");
        $('#divMask').css("display", "none");
    }

    function addSelectorClass(object) {
        $("#choose-a-province a").removeClass('choosen');
        $(object).addClass("choosen");
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
